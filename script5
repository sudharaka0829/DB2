#!/bin/bash

# Switch to the db2inst1 user and define functions
su - db2inst1 << 'EOF'
# DB2 connection details
DB_USER="db2inst1"
DB_PASS="abcd1234"
DB_NAME="pegadb"
JSON_FILE="/etc/zabbix/db2_parameters.json"

# Function to execute DB2 queries
execute_db2_query() {
    db2 connect to $DB_NAME > /dev/null 2>&1
    db2 -x "$1"
}

# Function to get log utilization percent
get_log_utilization() {
    execute_db2_query "select LOG_UTILIZATION_PERCENT from sysibmadm.MON_TRANSACTION_LOG_UTILIZATION"
}

# Function to get connection state
get_connection_state() {
    db2 connect to $DB_NAME > /dev/null 2>&1
    db2 get dbm cfg | grep -A 1 "Database Connection State"
}

# Function to count executing applications
count_executing_apps() {
    db2 list applications for database $DB_NAME show detail | grep -i "executing" | wc -l
}

# Function to count lock waits
count_lock_waits() {
    execute_db2_query "SELECT COUNT(*) FROM SYSIBMADM.LOCKWAITS"
}

# Function to count active connections
count_active_connections() {
    execute_db2_query "select count(*) AS ACTIVE_CONNECTIONS FROM SYSIBMADM.APPLICATIONS WHERE APPL_STATUS = 'U'"
}

# Function to get total database size
get_database_size() {
    execute_db2_query "select sum(TBSP_USED_SIZE_KB) / 1024 / 1024 as DATABASE_SIZE from sysibmadm.TBSP_UTILIZATION"
}

# Function to get database status
get_database_status() {
    execute_db2_query "SELECT DB_STATUS FROM TABLE(MON_GET_DATABASE(-2)) AS T"
}

# Function to get current server name
get_current_server() {
    execute_db2_query "select current server as server from sysibm.sysdummy1"
}

# Call functions to collect data
log_utilization=$(get_log_utilization)
connection_state=$(get_connection_state | grep "Connection state" | awk -F ' = ' '{print $2}')
executing_apps=$(count_executing_apps)
lock_waits=$(count_lock_waits)
active_connections=$(count_active_connections)
database_size=$(get_database_size)
database_status=$(get_database_status)
current_server=$(get_current_server)

# Construct JSON array
json_array='['

# Add each parameter as an object to the JSON array
json_array+='{"{#PARAMETER}": "LOG_UTILIZATION_PERCENT", "Value": "'$log_utilization'"},'
json_array+='{"{#PARAMETER}": "CONNECTION_STATE", "Value": "'"$connection_state"'"},'
json_array+='{"{#PARAMETER}": "EXECUTING_APPLICATIONS", "Value": "'$executing_apps'"},'
json_array+='{"{#PARAMETER}": "LOCK_WAITS_COUNT", "Value": "'$lock_waits'"},'
json_array+='{"{#PARAMETER}": "ACTIVE_CONNECTIONS", "Value": "'$active_connections'"},'
json_array+='{"{#PARAMETER}": "DATABASE_SIZE_GB", "Value": "'$database_size'"},'
json_array+='{"{#PARAMETER}": "DATABASE_STATUS", "Value": "'"$database_status"'"},'
json_array+='{"{#PARAMETER}": "CURRENT_SERVER", "Value": "'"$current_server"'"}'

# Close JSON array
json_array+=']'

# Output the JSON array to a file
echo "$json_array" > "$JSON_FILE"

EOF








[{"{#PARAMETER}": "LOG_UTILIZATION_PERCENT", "Value": "                   2.83"},{"{#PARAMETER}": "CONNECTION_STATE", "Value": ""},{"{#PARAMETER}": "EXECUTING_APPLICATIONS", "Value": "0"},{"{#PARAMETER}": "LOCK_WAITS_COUNT", "Value": "          0"},{"{#PARAMETER}": "ACTIVE_CONNECTIONS", "Value": "                 0"},{"{#PARAMETER}": "DATABASE_SIZE_GB", "Value": "                  68"},{"{#PARAMETER}": "DATABASE_STATUS", "Value": "ACTIVE          "},{"{#PARAMETER}": "CURRENT_SERVER", "Value": "PEGADB            "}]

