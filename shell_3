#!/bin/sh

# Define the path to the JSON file
JSON_FILE="/etc/zabbix/db_info_data.json"

# Switch to the db2inst1 user and define functions
su - db2inst1 << 'EOF'
# DB2 connection details
DB_USER="db2inst1"
DB_PASS="abcd1234"
DB_NAME="pegadb"

# Function to execute DB2 queries
execute_db2_query() {
    db2 connect to $DB_NAME > /dev/null 2>&1
    db2 -x "$1"
}

# Function to get log utilization percent
get_log_utilization() {
    execute_db2_query "select LOG_UTILIZATION_PERCENT from sysibmadm.MON_TRANSACTION_LOG_UTILIZATION"
}

# Function to get connection state
get_connection_state() {
    db2 connect to $DB_NAME > /dev/null 2>&1
    db2 get dbm cfg | grep -A 1 "Database Connection State"
}

# Function to count executing applications
count_executing_apps() {
    db2 list applications for database $DB_NAME show detail | grep -i "executing" | wc -l
}

# Function to count lock waits
count_lock_waits() {
    execute_db2_query "SELECT COUNT(*) FROM SYSIBMADM.LOCKWAITS"
}

# Function to count active connections
count_active_connections() {
    execute_db2_query "select count(*) AS ACTIVE_CONNECTIONS FROM SYSIBMADM.APPLICATIONS WHERE APPL_STATUS = 'U'"
}

# Function to get total database size
get_database_size() {
    execute_db2_query "select sum(TBSP_USED_SIZE_KB) / 1024 / 1024 as DATABASE_SIZE from sysibmadm.TBSP_UTILIZATION"
}

# Function to get database status
get_database_status() {
    execute_db2_query "SELECT DB_STATUS FROM TABLE(MON_GET_DATABASE(-2)) AS T"
}

# Function to get current server name
get_current_server() {
    execute_db2_query "select current server as server from sysibm.sysdummy1"
}

# Call functions to collect data
log_utilization=$(get_log_utilization)
connection_state=$(get_connection_state | grep "Connection state" | awk -F ' = ' '{print $2}')
executing_apps=$(count_executing_apps)
lock_waits=$(count_lock_waits)
active_connections=$(count_active_connections)
database_size=$(get_database_size)
database_status=$(get_database_status)
current_server=$(get_current_server)

# Output data in JSON format
echo '{
    "LOG_UTILIZATION_PERCENT": '$log_utilization',
    "CONNECTION_STATE": "'$connection_state'",
    "EXECUTING_APPLICATIONS": '$executing_apps',
    "LOCK_WAITS_COUNT": '$lock_waits',
    "ACTIVE_CONNECTIONS": '$active_connections',
    "DATABASE_SIZE_GB": '$database_size',
    "DATABASE_STATUS": "'$database_status'",
    "CURRENT_SERVER": "'$current_server'"
}' > $JSON_FILE

EOF
